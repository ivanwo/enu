{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Pet","props","src","happy","default","sad","mood","id","PetHandler","onClick","onclick","App","useState","setMood","className","_","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAoBA,SAASA,EAAIC,GAOX,OACI,qBAAKC,IAPG,CACVC,MAAM,kBACNC,QAAQ,oBACRC,IAAM,iBAIYJ,EAAMK,MAAOC,GAAG,QAGtC,SAASC,EAAWP,GAClB,OACE,qBAAKM,GAAG,eAAeE,QAASR,EAAMS,UA4C3BC,MAxCf,WAAgB,IAAD,EACSC,mBAAS,SADlB,mBACRN,EADQ,KACFO,EADE,KAwBb,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKP,GAAG,eACR,sBAAKA,GAAG,aAAR,UACE,cAACC,EAAD,CAAYE,QAvBlB,WACW,SAANJ,EAAeO,EAAQ,WACZ,WAANP,EAAiBO,EAAQ,OACnB,OAANP,GAAaO,EAAQ,YAqBzB,cAACb,EAAD,CAAKM,KAAMA,OAEb,sBAAKC,GAAG,gBAAR,UACE,wBAAQA,GAAG,aAAaE,QArBpB,SAAAM,GACRC,QAAQC,IAAI,OACZJ,EAAQ,UAmBJ,eACA,wBAAQN,GAAG,aAAaE,QAlBpB,SAAAM,GACRC,QAAQC,IAAI,OACZJ,EAAQ,YAgBJ,eACA,wBAAQN,GAAG,aAAaE,QAflB,SAAAM,GACVC,QAAQC,IAAI,SACZJ,EAAQ,QAaJ,sBC3DOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.255a2ce4.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n// for reference:\n// https://members.tripod.com/~Tamagotchi_Central/instructions.html\n/*\n  RENDER SCREENS\n    Create Pet:\n    * select name\n    * select type\n    * save data to localstorage\n    Play Pet:\n    * drag food to it to feed\n    * click and drag mouse on head to pet\n    * drag ball to it to play\n    * keeps track of time, 1 day: hungry, 2 day: starving, 3 day: dead\n    Datum:\n    * delete all pet data\n    * about project\n  DATA\n*/\nfunction Pet(props){\n  let moods = {\n    happy:\"./img/happy.png\", \n    default:\"./img/default.png\",\n    sad:  \"./img/sad.png\"\n  };\n\n  return(\n      <img src={moods[props.mood]} id=\"pet\"/>\n  );\n}\nfunction PetHandler(props){\n  return(\n    <div id=\"mood-changer\" onClick={props.onclick}></div>\n  );\n}\n\nfunction App() {\n  let [mood, setMood] = useState(\"happy\");\n  // if no localstorage data, render selection/ creation form\n  // if so, render the pet page\n\n  function nextMood(){\n    if(mood==\"happy\") setMood(\"default\");\n    else if(mood==\"default\") setMood(\"sad\");\n    else if(mood==\"sad\") setMood(\"happy\")\n  }\n\n  let one = _ =>{\n    console.log(\"one\");\n    setMood(\"happy\");\n  }\n  let two = _ =>{\n    console.log(\"two\");\n    setMood(\"default\");\n  }\n  let three = _ =>{\n    console.log(\"three\");\n    setMood(\"sad\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"pet-offset\"></div>\n      <div id=\"pet-holder\">\n        <PetHandler onclick={nextMood}/>\n        <Pet mood={mood}/>\n      </div>\n      <div id=\"button-holder\">\n        <button id=\"enu-button\" onClick={one}> </button>\n        <button id=\"enu-button\" onClick={two}> </button>\n        <button id=\"enu-button\" onClick={three}> </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}